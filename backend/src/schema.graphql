scalar DateTime

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  me: User
  currentUser: User
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  signin(email: String!, password: String!): AuthPayload!
  # createDraft(title: String!, content: String!): Post!
  # publish(id: ID!): Post!
  createPost(caption: String, pictureUrl: String!): Post!
  deletePost(id: ID!): Post!
}

type Subscription {
  feedSubscription: Post
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  caption: String
  pictureUrl: String!
  user: User!
}